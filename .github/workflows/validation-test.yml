name: Test and Validation
on:
  push:
    branches:
      - "PNC-728-load-secrets"
    paths-ignore:
      - '**/*.md'


jobs:
  ValidateModels:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Dependencies with Apt Get
        run: |
          sudo apt-get update
          sudo apt-get install python3.9 jq -y

      - name: Install libraries
        run: |
          pip install -r requirements.txt
          pip install -r requirements_github_actions.txt
          nltkdownload=`cat <<EOF
          import nltk
          nltk.download('stopwords')
          nltk.download('punkt')
          EOF`
          python -c "$nltkdownload"
          pip install git+https://${{ secrets.TOKEN_MACHINE_USER }}@github.com/IDinsight/faqt.git@v1.0.2
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      # --------------- Comment out if using Github Actions Secrets ----------------- #
      - name: Get secrets by name and by ARN
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        with:
          secret-ids: |
            aaq-template-core-secrets
            aaq-template-global-secrets
          parse-json-secrets: true

      - name: Run Unit Tests # Uses env variables loaded from AWS secrets
        env:
          PG_ENDPOINT: ${{env.AAQ_TEMPLATE_GLOBAL_SECRETS_PG_ENDPOINT}}
          PG_PASSWORD: ${{env.AAQ_TEMPLATE_GLOBAL_SECRETS_PG_PASSWORD}}
          INBOUND_CHECK_TOKEN: ${{env.AAQ_TEMPLATE_CORE_SECRETS_INBOUND_CHECK_TOKEN}}
          WORD2VEC_BINARY_BUCKET: ${{env.AAQ_TEMPLATE_CORE_SECRETS_WORD2VEC_BINARY_BUCKET}}
          PROMETHEUS_MULTIPROC_DIR: /tmp
        run: |
          coverage run -m pytest tests -m "not extended" --durations=0
          coverage lcov --include="core_model/*"

      - name: Run Validation Tests
        env:
          VALIDATION_BUCKET: ${{env.AAQ_TEMPLATE_CORE_SECRETS_VALIDATION_BUCKET}}
          VALIDATION_DATA_PREFIX: ${{env.AAQ_TEMPLATE_CORE_SECRETS_VALIDATION_DATA_PREFIX}}
          VALIDATION_FAQ_PREFIX: ${{env.AAQ_TEMPLATE_CORE_SECRETS_VALIDATION_FAQ_PREFIX}}
          REPO: ${{ github.repository }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }} 
          HASH: ${{ github.sha }}
          REF: ${{ github.ref }}
          PROMETHEUS_MULTIPROC_DIR: /tmp
          PG_ENDPOINT: ${{env.AAQ_TEMPLATE_GLOBAL_SECRETS_PG_ENDPOINT}}
          PG_PASSWORD: ${{env.AAQ_TEMPLATE_GLOBAL_SECRETS_PG_PASSWORD}}
          INBOUND_CHECK_TOKEN: ${{env.AAQ_TEMPLATE_CORE_SECRETS_INBOUND_CHECK_TOKEN}}
          WORD2VEC_BINARY_BUCKET: ${{env.AAQ_TEMPLATE_CORE_SECRETS_WORD2VEC_BINARY_BUCKET}}
        if: "${{ (env.AAQ_TEMPLATE_CORE_SECRETS_VALIDATION_BUCKET != '') && (env.AAQ_TEMPLATE_CORE_SECRETS_VALIDATION_DATA_PREFIX != '') && (env.AAQ_TEMPLATE_CORE_SECRETS_VALIDATION_FAQ_PREFIX != '')}}"
        run: |
          # for testing
          python -m pytest validation

      # ----------------------------------------------------------------------------- #

      # ----------------- Uncomment if using Github Actions Secrets ----------------- #
      # Uncomment to use github action secrets
      # - name: Run Unit Tests
      #   env:
      #     PG_ENDPOINT: ${{secrets.PG_ENDPOINT}}
      #     PG_PASSWORD: ${{secrets.PG_PASSWORD}}
      #     INBOUND_CHECK_TOKEN: ${{secrets.INBOUND_CHECK_TOKEN}}
      #     WORD2VEC_BINARY_BUCKET: ${{secrets.WORD2VEC_BINARY_BUCKET}}
      #     PROMETHEUS_MULTIPROC_DIR: /tmp
      #   run: |
      #     coverage run -m pytest tests -m "not extended" --durations=0
      #     coverage lcov --include="core_model/*"
      # - name: Run Validation Tests
      #   env:
      #     VALIDATION_BUCKET: ${{secrets.VALIDATION_BUCKET}}
      #     VALIDATION_DATA_PREFIX: ${{secrets.VALIDATION_DATA_PREFIX}}
      #     VALIDATION_FAQ_PREFIX: ${{secrets.VALIDATION_FAQ_PREFIX}}
      #     REPO: ${{ github.repository }}
      #     BRANCH_NAME: ${{ github.head_ref || github.ref_name }} 
      #     HASH: ${{ github.sha }}
      #     REF: ${{ github.ref }}
      #     PROMETHEUS_MULTIPROC_DIR: /tmp
      #     PG_ENDPOINT: ${{secrets.PG_ENDPOINT}}
      #     PG_PASSWORD: ${{secrets.PG_PASSWORD}}
      #     INBOUND_CHECK_TOKEN: ${{secrets.INBOUND_CHECK_TOKEN}}
      #     WORD2VEC_BINARY_BUCKET: ${{secrets.WORD2VEC_BINARY_BUCKET}}
      #   if: "${{ (env.VALIDATION_BUCKET != '') && (env.VALIDATION_DATA_PREFIX != '') && (env.VALIDATION_FAQ_PREFIX != '')}}"
      #   run: |
      #     # for testing
      #     python -m pytest validation
      # ----------------------------------------------------------------------------- #
      
      - name: Coveralls Test Coverage
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage.lcov
